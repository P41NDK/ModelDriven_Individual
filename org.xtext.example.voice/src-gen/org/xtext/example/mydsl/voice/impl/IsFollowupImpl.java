/**
 * generated by Xtext 2.21.0
 */
package org.xtext.example.mydsl.voice.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.voice.Intent;
import org.xtext.example.mydsl.voice.IsFollowup;
import org.xtext.example.mydsl.voice.VoicePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Is Followup</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.voice.impl.IsFollowupImpl#getIntent <em>Intent</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IsFollowupImpl extends MinimalEObjectImpl.Container implements IsFollowup
{
  /**
   * The cached value of the '{@link #getIntent() <em>Intent</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntent()
   * @generated
   * @ordered
   */
  protected Intent intent;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IsFollowupImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return VoicePackage.Literals.IS_FOLLOWUP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Intent getIntent()
  {
    if (intent != null && intent.eIsProxy())
    {
      InternalEObject oldIntent = (InternalEObject)intent;
      intent = (Intent)eResolveProxy(oldIntent);
      if (intent != oldIntent)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, VoicePackage.IS_FOLLOWUP__INTENT, oldIntent, intent));
      }
    }
    return intent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Intent basicGetIntent()
  {
    return intent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIntent(Intent newIntent)
  {
    Intent oldIntent = intent;
    intent = newIntent;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VoicePackage.IS_FOLLOWUP__INTENT, oldIntent, intent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case VoicePackage.IS_FOLLOWUP__INTENT:
        if (resolve) return getIntent();
        return basicGetIntent();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case VoicePackage.IS_FOLLOWUP__INTENT:
        setIntent((Intent)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case VoicePackage.IS_FOLLOWUP__INTENT:
        setIntent((Intent)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case VoicePackage.IS_FOLLOWUP__INTENT:
        return intent != null;
    }
    return super.eIsSet(featureID);
  }

} //IsFollowupImpl
