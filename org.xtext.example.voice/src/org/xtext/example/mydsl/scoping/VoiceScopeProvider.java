/*
 * generated by Xtext 2.21.0
 */
package org.xtext.example.mydsl.scoping;

import java.util.List;
import java.util.Objects;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import org.eclipse.xtext.scoping.impl.FilteringScope;
import org.xtext.example.mydsl.voice.Intent;
import org.xtext.example.mydsl.voice.VoicePackage;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
public class VoiceScopeProvider extends AbstractVoiceScopeProvider {
    @Override
    public IScope getScope(EObject context, EReference reference) {
        if (context instanceof Intent
                && reference == VoicePackage.Literals.INTENT__ZUPER) {
            EObject rootElement = EcoreUtil2.getRootContainer(context);
            List<Intent> candidates = EcoreUtil2.getAllContentsOfType(rootElement, Intent.class);
            IScope existingScope = Scopes.scopeFor(candidates);

            return new FilteringScope(existingScope, (e) -> !Objects.equals(e.getEObjectOrProxy(), context));
        }
        return super.getScope(context, reference);
    }
}
